name: Deploy

on:
  push:
    branches: [ dev-server ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Pull master, rebuild docker image and start docker
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script: |
          cd ${{ secrets.PATH }}
          git pull
          git checkout dev-server
          echo ${{ secrets.PASSWORD }} | sudo -S docker stop pointkeeper
          echo ${{ secrets.PASSWORD }} | sudo -S docker rm pointkeeper
          echo ${{ secrets.PASSWORD }} | sudo -S docker build -t pointkeeper_image:latest ./
          echo ${{ secrets.PASSWORD }} | sudo -S docker rmi $(echo ${{ secrets.PASSWORD }} | sudo -S docker images -f "dangling=true" -q)
          echo ${{ secrets.PASSWORD }} | sudo -S docker run -d -p 80:80 --name pointkeeper pointkeeper_image:latest

#name: Deploy
#
## Controls when the action will run.
#on:
#  push:
#    branches: [ dev-server ]
#
#jobs:
#  build:
#    runs-on: ubuntu-20.04
#    steps:
#      - name: executing remote ssh commands using password
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_IP }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          password: ${{ secrets.SERVER_USERPASSWORD }}
#          port: ${{ secrets.SERVER_PORT }}
#          script: whoami
#          - uses: actions/checkout@v1
#          - name: Push to server
#            uses: appleboy/ssh-action@master
#            with:
#              host: ${{ secrets.SERVER_IP }}
#              username: ${{ secrets.SERVER_USERNAME }}
#              key: ${{ secrets.SERVER_SSHKEY }}
#              script: |
#                cd ${{ secrets.PROJECT_PATH }} && \
#                git pull && git checkout dev-server && \
#                echo ${{ secrets.SERVER_USERPASSWORD }} | sudo -S docker build -t pointkeeper_image ./ &&
#                echo ${{ secrets.SERVER_USERPASSWORD }} | sudo docker run -d -p 80:80 pointkeeper_image